{
	"lis": {
  "prefix": ">>lis",
  "body": [
    "template <typename T = ll>",
    "class _lis {",
    "public:",
    "    ll n; vector<T> arr;",
    "    vector<T> result, rec;",
    "    vector<T> num;",
    "",
    "    _lis(ll n) {",
    "        this->n = n;",
    "        arr.resize(n + 1); rec.resize(n + 1);",
    "    }",
    "",
    "    void add(ll idx, ll n) {",
    "        arr[idx] = n;",
    "    }",
    "",
    "    void init() {",
    "        for (int i = 1; i <= n; i++) {",
    "            ll cur = arr[i];",
    "            auto nxt = upper_bound(num.begin(), num.end(), cur) - num.begin();",
    "            if (nxt == num.size()) num.push_back(cur);",
    "            else num[nxt] = cur;",
    "            rec[i] = nxt + 1;",
    "        }",
    "",
    "        ll cnt = num.size();",
    "        result.resize(cnt);",
    "        for (int i = n; i >= 1; i--) {",
    "            if (rec[i] != cnt) continue;",
    "            cnt--; result[cnt] = arr[i];",
    "        }",
    "    }",
    "",
    "    vector <ll> ret() {",
    "        return result;",
    "    }",
    "};"
  ],
  "description": "lis"
}
}