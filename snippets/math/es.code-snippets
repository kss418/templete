{
	"es": {
  "prefix": ">>es",
  "body": [
    "class _es { // flag (1 == prime / 2 == phi / 4 == mobius)",
    "public:",
    "    ll n; vector <ll> pv, pn, mov, phiv;",
    "    vector <bool> v;",
    "    _es(ll n, ll flag = 1) {",
    "        this->n = n;",
    "",
    "        if(flag & 1){",
    "            pv.resize(n + 1, -1); pv[1] = 1;",
    "            for (ll i = 2;i <= n;i++) {",
    "                if(pv[i] != -1) continue; pv[i] = i;",
    "                pn.push_back(i);",
    "                for (int j = 2 * i; j <= n; j += i) {",
    "                    if(pv[j] == -1) pv[j] = i;",
    "                }",
    "            }",
    "        }",
    "",
    "        if(flag & 2){",
    "            phiv.resize(n + 1); iota(all(phiv), 0);",
    "            v.resize(n + 1);",
    "            for(ll i = 2;i <= n;i++){",
    "                if(v[i]) continue;",
    "                for(ll j = i;j <= n;j += i){",
    "                    phiv[j] /= i; phiv[j] *= (i - 1); v[j] = 1;",
    "                }",
    "            }",
    "        }",
    "",
    "        if(flag & 4){",
    "            mov.resize(n + 1, -2);",
    "            mov[0] = 0; mov[1] = 1;",
    "            for(ll i = 2;i <= n;i++){",
    "                if(mov[i] != -2) continue; mov[i] = -1;",
    "                for(ll j = 2 * i;j <= n;j += i) {",
    "                    if(mov[j] == -2) mov[j] = 1;",
    "                    mov[j] *= -1;",
    "                }",
    "                for(ll j = i * i;j <= n; j += i * i) mov[j] = 0;",
    "            }",
    "        }",
    "    }",
    "",
    "    ll mp(ll n) { return pv[n]; } // 최소 소인수 반환",
    "    vector<ll>& ret() { return pn; } // 소수 벡터 반환",
    "    bool prime(ll n) { // 소수 판별",
    "        if (n == 1) return 0;",
    "        return pv[n] == n;",
    "    }",
    "    ll mobius(ll n){ return mov[n]; }",
    "    ll phi(ll n){ return phiv[n]; }",
    "};"
  ],
  "description": "es"
}
}